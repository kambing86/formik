{"version":3,"file":"formik.umd.development.js","sources":["../src/utils.ts","../src/FormikContext.tsx","../src/Formik.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/connect.tsx","../src/FieldArray.tsx","../src/ErrorMessage.tsx","../src/FastField.tsx"],"sourcesContent":["import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nFormikContext.displayName = 'FormikContext';\n\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FormikHelpers,\n  FormikHandlers,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value) as string)\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (\n      validateOnMount &&\n      isMounted.current === true &&\n      isEqual(initialValues.current, props.initialValues)\n    ) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithHighPriority(initialValues.current);\n      }\n    }\n  }, [\n    enableReinitialize,\n    props.initialValues,\n    resetForm,\n    validateOnMount,\n    validateFormWithHighPriority,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fieldRegistry.current[name] &&\n      isFunction(fieldRegistry.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: error[name] },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: React.SetStateAction<Values>, shouldValidate?: boolean) => {\n      const resolvedValues = isFunction(values) ? values(state.values) : values;\n\n      dispatch({ type: 'SET_VALUES', payload: resolvedValues });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(resolvedValues)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as any).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : options && multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject ? nameOrOptions.name : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  const validateData: FormikValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function merge(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig<V = any> {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | string\n    | React.ComponentType<FieldProps<V>>\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | React.ComponentType<FieldProps<V>['field']>\n    | string\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<V>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<V>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes &\n  FieldConfig<T> &\n  T & { name: string };\n\nexport type FieldHookConfig<T> = GenericFieldHTMLAttributes & FieldConfig<T>;\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldHookConfig<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>, FieldHelperProps<Val>] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    registerField,\n    unregisterField,\n  } = formik;\n\n  const isAnObject = isObject(propsOrFieldName);\n\n  // Normalize propsOrFieldName to FieldHookConfig<Val>\n  const props: FieldHookConfig<Val> = isAnObject\n    ? (propsOrFieldName as FieldHookConfig<Val>)\n    : { name: propsOrFieldName as string };\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  invariant(\n    fieldName,\n    'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n  );\n\n  return [\n    getFieldProps(props),\n    getFieldMeta(fieldName),\n    getFieldHelpers(fieldName),\n  ];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action ?? '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik helpers + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form status\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form errors state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps extends object,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            children={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.FC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.FC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  setIn,\n  isEmptyArray,\n} from './utils';\nimport isEqual from 'react-fast-compare';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (\n  arrayLike: ArrayLike<any>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      this.props.validateOnChange &&\n      this.props.formik.validateOnChange &&\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      )\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n      let updateTouched =\n        typeof alterTouched === 'function' ? alterTouched : fn;\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = formik.getFieldProps({ name, ...props });\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n"],"names":["isEmptyArray","value","Array","isArray","length","isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isNaN","isEmptyChildren","children","React","count","isPromise","then","isInputEvent","target","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","key","def","p","path","toPath","setIn","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","nextPath","setNestedObjectValues","object","visited","response","WeakMap","keys","k","val","get","set","FormikContext","displayName","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formik","invariant","formikReducer","state","msg","type","values","payload","touched","isEqual","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","current","dispatch","runValidateHandler","Promise","resolve","reject","maybePromisedErrors","validate","actualException","console","warn","runValidationSchema","validationSchema","schema","promise","validateAt","validateYupSchema","err","name","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","prev","curr","index","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithHighPriority","useEventCallback","resetForm","nextState","dispatchFn","onReset","maybePromisedOnReset","imperativeMethods","validateField","maybePromise","x","error","registerField","unregisterField","setTouched","shouldValidate","willValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","parsed","persist","currentTarget","id","checked","outerHTML","options","multiple","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","test","parseFloat","getValueForCheckbox","getSelectedValues","handleChange","eventOrPath","event","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","Error","isActuallyValid","promiseOrUndefined","executeSubmit","result","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","reason","validateForm","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","nameOrOptions","isAnObject","valueState","onChange","onBlur","valueProp","is","as","indexOf","dirty","isValid","ctx","Formik","formikbag","component","render","innerRef","only","yupError","inner","message","sync","context","validateData","prepareDataForValidation","abortEarly","data","hasOwnProperty","isPlainObject","source","destination","forEach","merge","cloneRequested","shouldClone","isMergeableObject","push","from","el","selected","currentValue","Boolean","currentArrayOfValues","isValueInArray","concat","useIsomorphicLayoutEffect","window","createElement","fn","ref","args","apply","useField","propsOrFieldName","fieldName","validateFn","Field","_validate","meta","legacyBag","form","asElement","Form","action","_action","withFormik","mapPropsToValues","vanillaProps","config","createFormik","Component","componentDisplayName","constructor","C","actions","formikProps","mapPropsToStatus","mapPropsToErrors","mapPropsToTouched","renderFormComponent","hoistNonReactStatics","connect","Comp","WrappedComponent","move","array","to","copy","copyArrayLike","splice","swap","arrayLike","indexA","indexB","a","insert","replace","maxIndex","parseInt","max","FieldArrayInner","alterTouched","alterErrors","prevState","updateErrors","updateTouched","fieldError","fieldTouched","updateArrayField","cloneDeep","arr","unshift","remove","pop","bind","componentDidUpdate","prevProps","tmp","arrayHelpers","handlePush","handlePop","handleSwap","handleMove","handleInsert","handleReplace","handleUnshift","handleRemove","restOfFormik","FieldArray","ErrorMessageImpl","shouldComponentUpdate","touch","ErrorMessage","FastFieldInner","shouldUpdate","componentDidMount","componentWillUnmount","bag","FastField"],"mappings":"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"}